import { c as create_ssr_component, b as subscribe, e as escape, d as each } from "../../../chunks/ssr.js";
import { p as page } from "../../../chunks/stores.js";
const css = {
  code: "main.svelte-v3ilwc.svelte-v3ilwc{display:flex;align-items:center;justify-content:center;flex-direction:column}a.svelte-v3ilwc.svelte-v3ilwc{color:black}#name.svelte-v3ilwc.svelte-v3ilwc{font-size:28px}.container.svelte-v3ilwc.svelte-v3ilwc{display:flex}span.svelte-v3ilwc.svelte-v3ilwc{display:flex;align-items:center}.selector.svelte-v3ilwc.svelte-v3ilwc{margin:10px 0 5px 0}.selector.svelte-v3ilwc a.svelte-v3ilwc{margin:0 10px 0 10px}select.svelte-v3ilwc.svelte-v3ilwc{border:0px;color:black;padding:5px 20px;border-radius:10px;background-color:#f5eedd}@media screen and (max-width: 500px){h1.svelte-v3ilwc.svelte-v3ilwc{font-size:6vw}p.svelte-v3ilwc.svelte-v3ilwc{font-size:3.5vw}}.card.svelte-v3ilwc.svelte-v3ilwc{border-radius:15px;width:40vw;height:40vw;margin:5px;display:flex;flex-direction:column;align-items:center;justify-content:center}@media screen and (min-width: 500px){.card.svelte-v3ilwc.svelte-v3ilwc{width:200px;height:200px}}img.svelte-v3ilwc.svelte-v3ilwc{height:25px;margin:0 2px 0 0}xxx.svelte-v3ilwc.svelte-v3ilwc{color:#7eb500}.brawlers.svelte-v3ilwc.svelte-v3ilwc{display:grid;grid-template-columns:repeat(2, 1fr);grid-template-rows:repeat(5, 1fr);grid-column-gap:0px;grid-row-gap:0px}#brawlersInfo.svelte-v3ilwc.svelte-v3ilwc{display:none;box-sizing:border-box}#brawler-card.svelte-v3ilwc.svelte-v3ilwc{justify-content:end;align-items:start}.brawlers.svelte-v3ilwc .card:hover #brawlersInfo.svelte-v3ilwc{background-color:black;width:100%;height:100%;border-radius:15px;display:flex;padding:10px;flex-direction:column;justify-content:end;background:rgba(255, 255, 255, 0.25);backdrop-filter:blur(10px);-webkit-backdrop-filter:blur(10px);border-radius:10px;border:1px solid rgba(255, 255, 255, 0.18)}.brawlers.svelte-v3ilwc .card:active #brawlersInfo.svelte-v3ilwc{background-color:black;width:100%;height:100%;border-radius:15px;display:flex;flex-direction:column;justify-content:end;background:rgba(255, 255, 255, 0.25);backdrop-filter:blur(10px);-webkit-backdrop-filter:blur(10px);border-radius:10px;border:1px solid rgba(255, 255, 255, 0.18)}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n\\timport { onMount } from 'svelte';\\n\\timport { page } from '$app/stores';\\n\\n\\tconst id = $page.url.searchParams.get('id');\\n\\tconst url = encodeURI(\\n\\t\\t'https://bsproxy.royaleapi.dev/v1/players/%23' +\\n\\t\\t\\tid +\\n\\t\\t\\t'?Authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiIsImtpZCI6IjI4YTMxOGY3LTAwMDAtYTFlYi03ZmExLTJjNzQzM2M2Y2NhNSJ9.eyJpc3MiOiJzdXBlcmNlbGwiLCJhdWQiOiJzdXBlcmNlbGw6Z2FtZWFwaSIsImp0aSI6Ijk3ZDRhMzIzLWJiMmItNDYyNS04OGY3LWRhOWQ3MzUyOWZjNCIsImlhdCI6MTcyMDAyOTE1Mywic3ViIjoiZGV2ZWxvcGVyLzQ3YjJmZDgxLTZjYmEtN2QxYS0wZWIyLWJhZTIwY2FkNDNhMSIsInNjb3BlcyI6WyJicmF3bHN0YXJzIl0sImxpbWl0cyI6W3sidGllciI6ImRldmVsb3Blci9zaWx2ZXIiLCJ0eXBlIjoidGhyb3R0bGluZyJ9LHsiY2lkcnMiOlsiNDUuNzkuMjE4Ljc5Il0sInR5cGUiOiJjbGllbnQifV19.rhcA-17kcd7hdO3oGZQIMENFVMeQOOp7giJ5PvsOn5mhX7fuuuxbiggQdjonSOvJySUMBCB5UI43hn2nuQIwXg'\\n\\t);\\n\\tconst fetchurl = 'https://api.allorigins.win/get?url=' + url;\\n\\n\\tlet dataLoaded = false;\\n\\tlet noData = false;\\n\\tlet playerName = '';\\n\\tlet trophies = 0;\\n\\tlet highestTrophies = 0;\\n\\tlet difference = 0;\\n\\tlet duoVictories = 0;\\n\\tlet vs3Victories = 0;\\n\\tlet soloVictories = 0;\\n\\tlet brawlersLength = 0;\\n\\tlet brawlers = [];\\n\\tlet brawlersUnsorted = [];\\n\\tlet tag = '';\\n\\tasync function getJSON(url) {\\n\\t\\t// Sends a API Request to the Brawl Stars API\\n\\t\\ttry {\\n\\t\\t\\tconst response = await fetch(url);\\n\\t\\t\\tif (!response.ok) {\\n\\t\\t\\t\\tthrow new Error(response.statusText);\\n\\t\\t\\t}\\n\\t\\t\\tconst data = await response.json();\\n\\t\\t\\treturn data;\\n\\t\\t} catch (error) {\\n\\t\\t\\treturn error;\\n\\t\\t}\\n\\t}\\n\\n\\tgetJSON(fetchurl)\\n\\t\\t// Calls the function to get data from the brawl stars api\\n\\t\\t.then((data) => {\\n\\t\\t\\tif (data && data.contents) {\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tdata = JSON.parse(data.contents);\\n\\t\\t\\t\\t\\t// Parses the data from the API into JSON to make it easier to use the data\\n\\t\\t\\t\\t\\tif (data.name) {\\n\\t\\t\\t\\t\\t\\tplayerName = data.name;\\n\\t\\t\\t\\t\\t\\ttrophies = data.trophies;\\n\\t\\t\\t\\t\\t\\thighestTrophies = data.highestTrophies;\\n\\t\\t\\t\\t\\t\\tdifference = highestTrophies - trophies;\\n\\t\\t\\t\\t\\t\\tduoVictories = data.duoVictories;\\n\\t\\t\\t\\t\\t\\tvs3Victories = data['3vs3Victories'];\\n\\t\\t\\t\\t\\t\\tsoloVictories = data.soloVictories;\\n\\t\\t\\t\\t\\t\\tbrawlersLength = data.brawlers.length;\\n\\t\\t\\t\\t\\t\\ttag = data.tag;\\n\\t\\t\\t\\t\\t\\tbrawlersUnsorted = data.brawlers;\\n\\t\\t\\t\\t\\t\\tdataLoaded = true;\\n\\t\\t\\t\\t\\t\\tsort('trophies-d');\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tconsole.log('No Data Found');\\n\\t\\t\\t\\t\\t\\tnoData = true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} catch (error) {\\n\\t\\t\\t\\t\\tconsole.error('Error parsing JSON:', error);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tconsole.log('Invalid data received:', data);\\n\\t\\t\\t}\\n\\t\\t})\\n\\t\\t.catch((error) => {\\n\\t\\t\\tconsole.error('Error fetching data:', error);\\n\\t\\t});\\n\\tconst xxx = 'background-size: cover;';\\n\\tfunction sort(sorting) {\\n\\t\\t// For sorting brawlers using the trophies, highest Trophies or the Power Level\\n\\t\\tif (sorting == 'trophies-d') {\\n\\t\\t\\t// Descending Trophies\\n\\t\\t\\tbrawlers = [...brawlersUnsorted].sort((a, b) => b.trophies - a.trophies);\\n\\t\\t} else if (sorting == 'trophies-a') {\\n\\t\\t\\t// Ascending Trophies\\n\\t\\t\\tbrawlers = [...brawlersUnsorted].sort((a, b) => a.trophies - b.trophies);\\n\\t\\t} else if (sorting == 'highestTrophies') {\\n\\t\\t\\tbrawlers = [...brawlersUnsorted].sort((a, b) => b.highestTrophies - a.highestTrophies);\\n\\t\\t} else if (sorting == 'powerlvl') {\\n\\t\\t\\tbrawlers = [...brawlersUnsorted].sort((a, b) => b.power - a.power);\\n\\t\\t}\\n\\t}\\n\\n\\tlet selected = 0;\\n\\tfunction categorySelector(selection) {\\n\\t\\t// Select between different pages one for brawlers the other one for battle log (ik I could improve this)\\n\\t\\tselected = selection;\\n\\t\\tif (selected == 0) {\\n\\t\\t\\tdocument.querySelector('#a_brawlers').style.textDecoration = 'underline';\\n\\t\\t\\tdocument.querySelector('#a_battle_log').style.textDecoration = 'none';\\n\\t\\t}\\n\\t\\tif (selected == 1) {\\n\\t\\t\\tdocument.querySelector('#a_brawlers').style.textDecoration = 'none';\\n\\t\\t\\tdocument.querySelector('#a_battle_log').style.textDecoration = 'underline';\\n\\t\\t}\\n\\t}\\n\\n\\tfunction brawlerTrophiesColorCalc(current, highest) {\\n\\t\\t// Shows a red yellow or green colour using the current brawler and the highest brawler trophies\\n\\t\\tconst difference = current - highest;\\n\\t\\tif (current == highest) {\\n\\t\\t\\treturn '#66ff00';\\n\\t\\t}\\n\\t\\tif (difference > 90) {\\n\\t\\t\\treturn '#EE4B2B';\\n\\t\\t}\\n\\t\\tif (current > highest) {\\n\\t\\t\\treturn 'yellow';\\n\\t\\t}\\n\\t}\\n<\/script>\\n\\n<main>\\n\\t<!-- Checks if the data from the API was loaded  -->\\n\\t{#if dataLoaded == true}\\n\\t\\t<div class=\\"container\\">\\n\\t\\t\\t<div class=\\"card\\" style=\\"background-color: #CD6441;\\">\\n\\t\\t\\t\\t<h2 id=\\"name\\">{playerName}</h2>\\n\\t\\t\\t\\t<span\\n\\t\\t\\t\\t\\t><img src=\\"trophy.png\\" alt=\\"trohpy\\" />\\n\\t\\t\\t\\t\\t<p>{trophies}</p></span\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t<span style=\\"align-items: end;\\"\\n\\t\\t\\t\\t\\t><img src=\\"id.png\\" alt=\\"brawlstars id\\" />\\n\\t\\t\\t\\t\\t<p>{tag}</p></span\\n\\t\\t\\t\\t>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"card\\" style=\\"background-color: #1A2F21;\\">\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<h3>Most Trophies</h3>\\n\\t\\t\\t\\t\\t<span\\n\\t\\t\\t\\t\\t\\t><img src=\\"trophy.png\\" alt=\\"trohpy\\" />\\n\\t\\t\\t\\t\\t\\t<p>{highestTrophies}</p></span\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<p><xxx>+{difference}</xxx> more than<br />current Trophies</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\"container\\">\\n\\t\\t\\t<div class=\\"card\\" style=\\"background-color: #426F3F;\\">\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<h3>Wins</h3>\\n\\t\\t\\t\\t\\t<span><img src=\\"solo.png\\" alt=\\"Solo Victories\\" />{soloVictories}</span>\\n\\t\\t\\t\\t\\t<span><img src=\\"duo.png\\" alt=\\"Duo Victories\\" />{duoVictories}</span>\\n\\t\\t\\t\\t\\t<span><img src=\\"3v3.png\\" alt=\\"3v3 Victories\\" />{vs3Victories}</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"card\\" style=\\"background-color: #E8C05E; text-align:center\\">\\n\\t\\t\\t\\t<p style=\\"font-size: 24px;\\">Has <b>{brawlersLength}</b> from<br />81 Brawlers</p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\"container\\">\\n\\t\\t\\t<div class=\\"card\\" style=\\"background-color: #6f3f61;\\">\\n\\t\\t\\t\\t<h3>Potential Trophies</h3>\\n\\t\\t\\t\\t<p>Potential Trophies show how many Trophies you could have if they were all on</p>\\n\\t\\t\\t\\t<p>Rank 20 {brawlersLength * 500}</p>\\n\\t\\t\\t\\t<p>Rank 25 {brawlersLength * 750}</p>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"card\\" style=\\"background-color: #1A2F21;\\">\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t<h3>Most Trophies</h3>\\n\\t\\t\\t\\t\\t<span\\n\\t\\t\\t\\t\\t\\t><img src=\\"trophy.png\\" alt=\\"trohpy\\" />\\n\\t\\t\\t\\t\\t\\t<p>{highestTrophies}</p></span\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<p><xxx>+{difference}</xxx> more than<br />current Trophies</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<!-- Select between categories, Brawlers and Battle Log -->\\n\\t\\t<div class=\\"selector\\">\\n\\t\\t\\t<a on:click={() => categorySelector(0)} id=\\"a_brawlers\\" style=\\"text-decoration: underline;\\"\\n\\t\\t\\t\\t>Brawlers</a\\n\\t\\t\\t>\\n\\t\\t\\t<a on:click={() => categorySelector(1)} id=\\"a_battle_log\\">Battle Log</a>\\n\\t\\t</div>\\n\\n\\t\\t{#if selected == 0}\\n\\t\\t\\t<select id=\\"sort_brawlers\\" on:change={(event) => sort(event.target.value)}>\\n\\t\\t\\t\\t<option value=\\"trophies-d\\">Trophies Descending 📈</option>\\n\\t\\t\\t\\t<option value=\\"trophies-a\\">Trophies Ascending 📉</option>\\n\\t\\t\\t\\t<option value=\\"highestTrophies\\">Highest Trophies</option>\\n\\t\\t\\t\\t<option value=\\"powerlvl\\">Power Level</option>\\n\\t\\t\\t</select>\\n\\t\\t\\t<p style=\\"color: black;\\">Hover over a Brawler to show more information about it</p>\\n\\t\\t\\t<div class=\\"brawlers\\">\\n\\t\\t\\t\\t<!-- Import all brawlers and their portrait -->\\n\\t\\t\\t\\t{#each brawlers as brawler}\\n\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\tclass=\\"card\\"\\n\\t\\t\\t\\t\\t\\tid=\\"brawler-card\\"\\n\\t\\t\\t\\t\\t\\tstyle=\\"background: url(portrait/{brawler.name\\n\\t\\t\\t\\t\\t\\t\\t.toLowerCase()\\n\\t\\t\\t\\t\\t\\t\\t.replaceAll(' ', '')}_portrait.png); {xxx}\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<div id=\\"brawlersInfo\\">\\n\\t\\t\\t\\t\\t\\t\\t<h1 style=\\"\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{brawler.name}\\n\\t\\t\\t\\t\\t\\t\\t</h1>\\n\\t\\t\\t\\t\\t\\t\\t<p style=\\"white-space: nowrap;\\">Most Trophies:</p>\\n\\t\\t\\t\\t\\t\\t\\t<div style=\\"display: flex; align-items:start;\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\"trophy.png\\" alt=\\"highest brawler trophies\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Calculate the difference between the highest Trophies of the Brawler and the current -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Call a function that selects a fitting colour for the difference -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{brawler.highestTrophies} (<haya\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tstyle=\\"color: {brawlerTrophiesColorCalc(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbrawler.highestTrophies,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbrawler.trophies\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t)};\\">+{brawler.highestTrophies - brawler.trophies}</haya\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</p></span\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t><img src=\\"trophy.png\\" alt=\\"current trophies\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>{brawler.trophies}</p></span\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t><img src=\\"star.png\\" alt=\\"brawler rank\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>{brawler.rank}</p></span\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\"power.png\\" alt=\\"powerlevel brawler\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>{brawler.power}</p></span\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t{:else if selected == 1}\\n\\t\\t\\t<p style=\\"color: red;\\">Oh nothing there yet</p>\\n\\t\\t{/if}\\n\\t{:else if noData == true}\\n\\t\\t<!-- If the API gave a response without data this is shown. Could be because the account doesn't exist -->\\n\\t\\t{alert(\\n\\t\\t\\t'The account #' + id + \\" doesn't seem to exist.\\\\nAre you sure you entered the correct ID?\\"\\n\\t\\t)}\\n\\t{:else if dataLoaded == false}\\n\\t\\t<!-- Is shown while the data is loaded, the API request is sent and the data is put into variables -->\\n\\t\\t<p style=\\"color: red;\\">Data is getting loaded, please be patient.</p>\\n\\t{/if}\\n</main>\\n\\n<style>\\n\\t/* .grid-container {\\n        display: grid; \\n        grid-template-columns: 1fr 1fr; \\n        grid-template-rows: 1fr 1fr; \\n        gap: 50px 50px; \\n        grid-template-areas: \\n            \\". .\\"\\n            \\". .\\"; \\n    }\\n\\n    .grid-item {\\n        border-radius: 20px;\\n        width: 200px;\\n        height: 200px;\\n    } */\\n\\n\\t/* Basic Things */\\n\\tmain {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t\\tflex-direction: column;\\n\\t}\\n\\ta {\\n\\t\\tcolor: black;\\n\\t}\\n\\t#name {\\n\\t\\tfont-size: 28px;\\n\\t}\\n\\n\\t.container {\\n\\t\\tdisplay: flex;\\n\\t}\\n\\n\\tspan {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t}\\n\\n\\t.selector {\\n\\t\\tmargin: 10px 0 5px 0;\\n\\t}\\n\\n\\t.selector a {\\n\\t\\tmargin: 0 10px 0 10px;\\n\\t}\\n\\n\\tselect {\\n\\t\\tborder: 0px;\\n\\t\\tcolor: black;\\n\\t\\tpadding: 5px 20px;\\n\\t\\tborder-radius: 10px;\\n\\t\\tbackground-color: #f5eedd;\\n\\t}\\n\\n\\t@media screen and (max-width: 500px) {\\n\\t\\th1 {\\n\\t\\t\\tfont-size: 6vw;\\n\\t\\t}\\n\\t\\tp {\\n\\t\\t\\tfont-size: 3.5vw;\\n\\t\\t}\\n\\t}\\n\\t/* Cards */\\n\\t.card {\\n\\t\\tborder-radius: 15px;\\n\\t\\twidth: 40vw;\\n\\t\\theight: 40vw;\\n\\t\\tmargin: 5px;\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t}\\n\\n\\t@media screen and (min-width: 500px) {\\n\\t\\t.card {\\n\\t\\t\\twidth: 200px;\\n\\t\\t\\theight: 200px;\\n\\t\\t}\\n\\t}\\n\\timg {\\n\\t\\theight: 25px;\\n\\t\\tmargin: 0 2px 0 0;\\n\\t}\\n\\txxx {\\n\\t\\tcolor: #7eb500;\\n\\t}\\n\\n\\t/* Brawler Listr */\\n\\t.brawlers {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: repeat(2, 1fr);\\n\\t\\tgrid-template-rows: repeat(5, 1fr);\\n\\t\\tgrid-column-gap: 0px;\\n\\t\\tgrid-row-gap: 0px;\\n\\t}\\n\\n\\t#brawlersInfo {\\n\\t\\tdisplay: none;\\n\\t\\tbox-sizing: border-box;\\n\\t}\\n\\n\\t#brawler-card {\\n\\t\\tjustify-content: end;\\n\\t\\talign-items: start;\\n\\t}\\n\\t.brawlers .card:hover #brawlersInfo {\\n\\t\\tbackground-color: black;\\n\\t\\twidth: 100%;\\n\\t\\theight: 100%;\\n\\t\\tborder-radius: 15px;\\n\\t\\tdisplay: flex;\\n\\t\\tpadding: 10px;\\n\\t\\tflex-direction: column;\\n\\t\\tjustify-content: end;\\n\\t\\t/* Glassmorpish */\\n\\t\\tbackground: rgba(255, 255, 255, 0.25);\\n\\t\\tbackdrop-filter: blur(10px);\\n\\t\\t-webkit-backdrop-filter: blur(10px);\\n\\t\\tborder-radius: 10px;\\n\\t\\tborder: 1px solid rgba(255, 255, 255, 0.18);\\n\\t}\\n\\t.brawlers .card:active #brawlersInfo {\\n\\t\\tbackground-color: black;\\n\\t\\twidth: 100%;\\n\\t\\theight: 100%;\\n\\t\\tborder-radius: 15px;\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tjustify-content: end;\\n\\t\\t/* Glassmorpish */\\n\\t\\tbackground: rgba(255, 255, 255, 0.25);\\n\\t\\tbackdrop-filter: blur(10px);\\n\\t\\t-webkit-backdrop-filter: blur(10px);\\n\\t\\tborder-radius: 10px;\\n\\t\\tborder: 1px solid rgba(255, 255, 255, 0.18);\\n\\t}\\n</style>\\n"],"names":[],"mappings":"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"}`
};
const xxx = "background-size: cover;";
async function getJSON(url) {
  try {
    const response = await fetch(url);
    if (!response.ok) {
      throw new Error(response.statusText);
    }
    const data = await response.json();
    return data;
  } catch (error) {
    return error;
  }
}
function brawlerTrophiesColorCalc(current, highest) {
  const difference = current - highest;
  if (current == highest) {
    return "#66ff00";
  }
  if (difference > 90) {
    return "#EE4B2B";
  }
  if (current > highest) {
    return "yellow";
  }
}
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  const id = $page.url.searchParams.get("id");
  const url = encodeURI("https://bsproxy.royaleapi.dev/v1/players/%23" + id + "?Authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiIsImtpZCI6IjI4YTMxOGY3LTAwMDAtYTFlYi03ZmExLTJjNzQzM2M2Y2NhNSJ9.eyJpc3MiOiJzdXBlcmNlbGwiLCJhdWQiOiJzdXBlcmNlbGw6Z2FtZWFwaSIsImp0aSI6Ijk3ZDRhMzIzLWJiMmItNDYyNS04OGY3LWRhOWQ3MzUyOWZjNCIsImlhdCI6MTcyMDAyOTE1Mywic3ViIjoiZGV2ZWxvcGVyLzQ3YjJmZDgxLTZjYmEtN2QxYS0wZWIyLWJhZTIwY2FkNDNhMSIsInNjb3BlcyI6WyJicmF3bHN0YXJzIl0sImxpbWl0cyI6W3sidGllciI6ImRldmVsb3Blci9zaWx2ZXIiLCJ0eXBlIjoidGhyb3R0bGluZyJ9LHsiY2lkcnMiOlsiNDUuNzkuMjE4Ljc5Il0sInR5cGUiOiJjbGllbnQifV19.rhcA-17kcd7hdO3oGZQIMENFVMeQOOp7giJ5PvsOn5mhX7fuuuxbiggQdjonSOvJySUMBCB5UI43hn2nuQIwXg");
  const fetchurl = "https://api.allorigins.win/get?url=" + url;
  let dataLoaded = false;
  let noData = false;
  let playerName = "";
  let trophies = 0;
  let highestTrophies = 0;
  let difference = 0;
  let duoVictories = 0;
  let vs3Victories = 0;
  let soloVictories = 0;
  let brawlersLength = 0;
  let brawlers = [];
  let brawlersUnsorted = [];
  let tag = "";
  getJSON(fetchurl).then((data) => {
    if (data && data.contents) {
      try {
        data = JSON.parse(data.contents);
        if (data.name) {
          playerName = data.name;
          trophies = data.trophies;
          highestTrophies = data.highestTrophies;
          difference = highestTrophies - trophies;
          duoVictories = data.duoVictories;
          vs3Victories = data["3vs3Victories"];
          soloVictories = data.soloVictories;
          brawlersLength = data.brawlers.length;
          tag = data.tag;
          brawlersUnsorted = data.brawlers;
          dataLoaded = true;
          sort("trophies-d");
        } else {
          console.log("No Data Found");
          noData = true;
        }
      } catch (error) {
        console.error("Error parsing JSON:", error);
      }
    } else {
      console.log("Invalid data received:", data);
    }
  }).catch((error) => {
    console.error("Error fetching data:", error);
  });
  function sort(sorting) {
    {
      brawlers = [...brawlersUnsorted].sort((a, b) => b.trophies - a.trophies);
    }
  }
  $$result.css.add(css);
  $$unsubscribe_page();
  return `<main class="svelte-v3ilwc"> ${dataLoaded == true ? `<div class="container svelte-v3ilwc"><div class="card svelte-v3ilwc" style="background-color: #CD6441;"><h2 id="name" class="svelte-v3ilwc">${escape(playerName)}</h2> <span class="svelte-v3ilwc"><img src="trophy.png" alt="trohpy" class="svelte-v3ilwc"> <p class="svelte-v3ilwc">${escape(trophies)}</p></span> <span style="align-items: end;" class="svelte-v3ilwc"><img src="id.png" alt="brawlstars id" class="svelte-v3ilwc"> <p class="svelte-v3ilwc">${escape(tag)}</p></span></div> <div class="card svelte-v3ilwc" style="background-color: #1A2F21;"><div><h3 data-svelte-h="svelte-15shhnv">Most Trophies</h3> <span class="svelte-v3ilwc"><img src="trophy.png" alt="trohpy" class="svelte-v3ilwc"> <p class="svelte-v3ilwc">${escape(highestTrophies)}</p></span> <p class="svelte-v3ilwc"><xxx class="svelte-v3ilwc">+${escape(difference)}</xxx> more than<br>current Trophies</p></div></div></div> <div class="container svelte-v3ilwc"><div class="card svelte-v3ilwc" style="background-color: #426F3F;"><div><h3 data-svelte-h="svelte-321qzr">Wins</h3> <span class="svelte-v3ilwc"><img src="solo.png" alt="Solo Victories" class="svelte-v3ilwc">${escape(soloVictories)}</span> <span class="svelte-v3ilwc"><img src="duo.png" alt="Duo Victories" class="svelte-v3ilwc">${escape(duoVictories)}</span> <span class="svelte-v3ilwc"><img src="3v3.png" alt="3v3 Victories" class="svelte-v3ilwc">${escape(vs3Victories)}</span></div></div> <div class="card svelte-v3ilwc" style="background-color: #E8C05E; text-align:center"><p style="font-size: 24px;" class="svelte-v3ilwc">Has <b>${escape(brawlersLength)}</b> from<br>81 Brawlers</p></div></div> <div class="container svelte-v3ilwc"><div class="card svelte-v3ilwc" style="background-color: #6f3f61;"><h3 data-svelte-h="svelte-1gbyu2g">Potential Trophies</h3> <p class="svelte-v3ilwc" data-svelte-h="svelte-1d4tbko">Potential Trophies show how many Trophies you could have if they were all on</p> <p class="svelte-v3ilwc">Rank 20 ${escape(brawlersLength * 500)}</p> <p class="svelte-v3ilwc">Rank 25 ${escape(brawlersLength * 750)}</p></div> <div class="card svelte-v3ilwc" style="background-color: #1A2F21;"><div><h3 data-svelte-h="svelte-15shhnv">Most Trophies</h3> <span class="svelte-v3ilwc"><img src="trophy.png" alt="trohpy" class="svelte-v3ilwc"> <p class="svelte-v3ilwc">${escape(highestTrophies)}</p></span> <p class="svelte-v3ilwc"><xxx class="svelte-v3ilwc">+${escape(difference)}</xxx> more than<br>current Trophies</p></div></div></div>  <div class="selector svelte-v3ilwc"><a id="a_brawlers" style="text-decoration: underline;" class="svelte-v3ilwc" data-svelte-h="svelte-vqy5so">Brawlers</a> <a id="a_battle_log" class="svelte-v3ilwc" data-svelte-h="svelte-a9j5xa">Battle Log</a></div> ${`<select id="sort_brawlers" class="svelte-v3ilwc"><option value="trophies-d" data-svelte-h="svelte-h4u1w">Trophies Descending 📈</option><option value="trophies-a" data-svelte-h="svelte-19eotom">Trophies Ascending 📉</option><option value="highestTrophies" data-svelte-h="svelte-jobrvg">Highest Trophies</option><option value="powerlvl" data-svelte-h="svelte-2dz9g8">Power Level</option></select> <p style="color: black;" class="svelte-v3ilwc" data-svelte-h="svelte-cbnyk">Hover over a Brawler to show more information about it</p> <div class="brawlers svelte-v3ilwc"> ${each(brawlers, (brawler) => {
    return `<div class="card svelte-v3ilwc" id="brawler-card" style="${"background: url(portrait/" + escape(brawler.name.toLowerCase().replaceAll(" ", ""), true) + "_portrait.png); " + escape(xxx, true)}"><div id="brawlersInfo" class="svelte-v3ilwc"><h1 style="" class="svelte-v3ilwc">${escape(brawler.name)}</h1> <p style="white-space: nowrap;" class="svelte-v3ilwc" data-svelte-h="svelte-1uhkg1b">Most Trophies:</p> <div style="display: flex; align-items:start;"><div><span class="svelte-v3ilwc"><img src="trophy.png" alt="highest brawler trophies" class="svelte-v3ilwc"> <p class="svelte-v3ilwc">  ${escape(brawler.highestTrophies)} (<haya style="${"color: " + escape(brawlerTrophiesColorCalc(brawler.highestTrophies, brawler.trophies), true) + ";"}">+${escape(brawler.highestTrophies - brawler.trophies)}</haya>)
										</p></span> <span class="svelte-v3ilwc"><img src="trophy.png" alt="current trophies" class="svelte-v3ilwc"> <p class="svelte-v3ilwc">${escape(brawler.trophies)}</p></span> <span class="svelte-v3ilwc"><img src="star.png" alt="brawler rank" class="svelte-v3ilwc"> <p class="svelte-v3ilwc">${escape(brawler.rank)}</p></span></div> <div><span class="svelte-v3ilwc"><img src="power.png" alt="powerlevel brawler" class="svelte-v3ilwc"> <p class="svelte-v3ilwc">${escape(brawler.power)}</p></span></div> </div></div> </div>`;
  })}</div>`}` : `${noData == true ? ` ${escape(alert("The account #" + id + " doesn't seem to exist.\nAre you sure you entered the correct ID?"))}` : `${dataLoaded == false ? ` <p style="color: red;" class="svelte-v3ilwc" data-svelte-h="svelte-1i07xdg">Data is getting loaded, please be patient.</p>` : ``}`}`} </main>`;
});
export {
  Page as default
};
